@model IEnumerable<SemesterModel>
@using Microsoft.AspNetCore.Identity
@{
    ViewData["Title"] = "Semester";
}
<div class="col-lg-12 grid-margin stretch-card" style="padding-top: 2%">
    <div class="card">
        <div class="card-body">
            <h2 class="card-title"></h2>
            @if (User.IsInRole("SuperAdmin"))
            {
                <a class=" btn btn-primary btn-md " asp-action="CreateSemester" asp-controller="Curriculum">
                    New Semester
                </a>
            }
        </div>
    </div>
</div>
@*<h2 class="card-title" style="color:#54528e">Semester @semester.SemesterNo</h2>*@
@if (Model != null && Model.Any())
{

    @* <h2 class="card-title" style="color:#54528e">@ViewBag.program.ProgramName</h2>*@
    @foreach (var semester in Model)
    {
        <div class="row" style="padding-top: 0%;">
            <div class="col-12 grid-margin stretch-card">

                <div class="card">
                    <div class="card-body">
                        
                        @if (User.IsInRole("SuperAdmin"))
                        {
                            <a class="btn btn-danger btn-sm setting-link" asp-action="SemesterDetail" asp-controller="Curriculum">Details</a>

                        }
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Course Code</th>
                                        <th>Course Title</th>
                                        <th>Credit Hours</th>
                                        <th>Teacher Name</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    <tr>
                                        <td>@semester.Course!.CourseCode</td>
                                        <td>@semester.Course.CourseTitle</td>
                                        <td>@semester.Course.CourseCreditHours</td>
                                        <td>@semester.User.FullName</td>

                                    </tr>


                                    @*  @if (department.Programs != null)
                            {
                            @foreach (var program in department.Programs)
                            {
                            <tr>
                            <td>@program.ProgramName</td>
                            <td>@program.ProgramShortName</td>
                            <td>@program.Duration</td>
                            @if (User.IsInRole("SuperAdmin"))
                            {

                            <td>
                            <a class="btn btn-danger btn-sm setting-link" asp-action="SemesterDetail" asp-controller="Curriculum">Details</a>
                            </td>
                            }
                            </tr>
                            }
                            }
                            else
                            {
                            <tr>

                            <td>There Is no Active Department</td>
                            </tr>
                            }*@
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    }

}
else
{


    <p>There Is no Semester</p>

}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const switches = document.querySelectorAll('.custom-control-input');
        const settingLinks = document.querySelectorAll('.setting-link');
        const BaseURL = "https://localhost:7031";
        switches.forEach((switchElement, index) => {
            switchElement.addEventListener('change', function () {
                const userId = this.id.split('-')[1];
                const isEnabled = this.checked;

                const settingLink = settingLinks[index];
                var payload = {
                    status: isEnabled
                };
                // Enable or disable the setting link based on switch state
                if (isEnabled) {
                    console.log('User', userId, 'enabled');

                    $.ajax({
                        url: BaseURL + "/department/DepartmentStatus/" + userId,
                        type: "PUT",
                        contentType: "application/json",
                        data: JSON.stringify(payload),
                        success: function () {
                            console.log("Department status updated successfully");
    @*  settingLink.removeAttribute('disabled');
                                settingLink.classList.remove('disabled');*@
    @*  location.reload();*@
                                    },
                        error: function (xhr, status, error) {
                            console.log("An error occurred: " + error);
                            // Handle error response
                        }
                    });

                }
                else {
                    console.log('User', userId, 'disabled');

                    $.ajax({
                        url: "https://localhost:7031/department/DepartmentStatus/" + userId,
                        type: "PUT",
                        contentType: "application/json",
                        data: JSON.stringify(payload),
                        success: function () {
                            console.log("Department status updated successfully");
    @*  settingLink.removeAttribute('disabled');
                                settingLink.classList.remove('disabled');*@
                                location.reload();
                        },
                        error: function (xhr, status, error) {
                            console.log("An error occurred: " + error);
    @*  settingLink.setAttribute('disabled', 'disabled');
                                settingLink.classList.add('disabled');*@
                                    }
                    });
                }
            });
        });

    @*    settingLinks.forEach(link => {
            link.addEventListener('click', function (event) {
            event.preventDefault();
            const userId = this.getAttribute('data-user-id');

            // Perform actions based on the user ID
            console.log('Setting link clicked for User ID:', userId);
            });
            });*@
                });
    // Assume you have a button with the ID "update-status-button" and an input field with the ID "status-input"

    @*    $(document).ready(function () {
        $("#update-status-button").click(function () {
        var departmentId = 1; // Replace with the actual department ID
        var newStatus = $("#status-input").val();

        // Create the JSON payload
        var payload = {
        status: newStatus
        };

        // Send the PUT request using jQuery's AJAX function
        $.ajax({
        url: "/department/DepartmentStatus/" + departmentId,
        type: "PUT",
        contentType: "application/json",
        data: JSON.stringify(payload),
        success: function () {
        console.log("Department status updated successfully");
        // Handle success response
        },
        error: function (xhr, status, error) {
        console.log("An error occurred: " + error);
        // Handle error response
        }
        });
        });
        });*@








</script>



